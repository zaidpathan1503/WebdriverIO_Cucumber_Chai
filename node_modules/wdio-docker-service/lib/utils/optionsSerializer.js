'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.serializeOptions = serializeOptions;
exports.serializeOption = serializeOption;
exports.sanitizeValue = sanitizeValue;

var _camelToDash = require('./camelToDash');

var _camelToDash2 = _interopRequireDefault(_camelToDash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const RX_SPACES = /(\s)/g;
/**
 * @param {Object} opt Options to serialize
 * @return {Array}
 */

function serializeOptions(opt) {
    return Object.keys(opt).reduce((acc, key) => {
        const fixedKey = (0, _camelToDash2.default)(key);
        const value = sanitizeValue(opt[key]);
        const option = serializeOption(fixedKey, value);
        if (option) {
            if (Array.isArray(option)) {
                return acc.concat(option);
            }
            acc.push(option);
        }
        return acc;
    }, []);
}

/**
 * @param {String} key
 * @param {*} value
 * @return {Array}
 */
function serializeOption(key, value) {
    const prefix = key.length > 1 ? '--' : '-';

    if (typeof value === 'boolean' && value) {
        return [`${prefix}${key}`];
    }

    if (typeof value === 'string') {
        return [`${prefix}${key} ${value}`];
    }

    if (Array.isArray(value)) {
        return value.reduce((acc, item) => {
            acc.push(`${prefix}${key} ${item}`);
            return acc;
        }, []);
    }
}

/**
 * @param {*} value
 * @return {void | string | *}
 */
function sanitizeValue(value) {
    if (typeof value !== 'string') {
        return value;
    }
    return process.platform === 'win32' ? value : value.replace(RX_SPACES, '\\ ');
}

exports.default = serializeOptions;
//# sourceMappingURL=optionsSerializer.js.map